/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1 :
Input: s = "aa", t = "a"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2: 
Input: s = "", t = "y"
Output: "y"


## Hash Map 
- Mapping the first string
  - { a: true, b: true, c: true, d: true }
- Mapping the second string
  - { a: true, b: true, c: true, d: true, e: true }
- Looping through the second string
- Cek for the letter that not exists in the first hash map
*/

function findDifference(s, t) {
  //   const firstLetterMap = new Map();
  //   const secondLetterMap = new Map();

  //   for (let i = 0; i < s.length; i++) {
  //     firstLetterMap.set(i, s[i]);
  //   }

  //   for (let i = 0; i < t.length; i++) {
  //     secondLetterMap.set(i, t[i]);
  //   }

  //   for (let i = 0; i < t.length; i++) {
  //     const firstMapValue = firstLetterMap.get(i);
  //     const secondMapValue = secondLetterMap.get(i);
  //     if (firstMapValue !== secondMapValue) {
  //       return secondMapValue;
  //     }
  //   }

  //   return "";
  //   let totalSumFirstString = 0;
  //   for (let i = 0; i < s.length; i++) {
  //     totalSumFirstString += s.charCodeAt(i);
  //   }
  //   let totalSumSecondString = 0;
  //   for (let i = 0; i < t.length; i++) {
  //     totalSumSecondString += t.charCodeAt(i);
  //   }
  //   return String.fromCharCode(totalSumSecondString - totalSumFirstString);

  //   s = s.split("").sort();
  //   s;
  //   t = t.split("").sort();
  //   t;

  //   for (let i = 0; i < t.length; i++) {
  //     if (s[i] !== t[i]) return t[i];
  //   }

  //   return "";

  const map = {};
  for (const letter of s) {
    map[letter] = map[letter] + 1 || 1;
  }
  map;
  for (const letter of t) {
    if (!map[letter]) return letter;
    map[letter]--;
  }
}

console.log(findDifference("abcd", "abcde"));
